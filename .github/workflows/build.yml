name: build

on:
  push:
    branches: [ci]

jobs:
  build-package:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'pip'
      - name: Install Hatch
        run: pip install hatch
      - name: Determine Version
        run: hatch version `hatch run bump-version`
      - id: version
        name: Store version number for future jobs
        run: echo "version=`hatch version`" >> "$GITHUB_OUTPUT"
      - name: Create changelog
        run: hatch run generate-changelog
      - name: Store changelog artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md
      - name: Build Package
        run: hatch build
      - name: Store build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - build-package
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Download the changelog
      uses: actions/download-artifact@v4
      with:
        name: changelog
    - name: DEBUG artifacts
      run: ls -R
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
          ./CHANGELOG.md
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
        VERSION: ${{ needs.build-package.outputs.version }}
      run: >-
        gh release create $VERSION
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload $VERSION dist/**
        --repo '${{ github.repository }}' &&
        gh release upload $VERSION CHANGELOG.md
        --repo '${{ github.repository }}'
